{"version":3,"sources":["assets/Header.js","assets/Graph.js","assets/Body.js","assets/Login.js","assets/Profile.js","assets/Food.js","assets/Types.js","assets/Progress.js","assets/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","ReactFC","fcRoot","FusionCharts","Column2D","FusionTheme","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","yAxisMinValue","numberSuffix","theme","data","label","value","Graph","ReactFC_default","Body","Login","for","class","id","aria-describedby","placeholder","data-onsuccess","Profile","Food","state","foodName","meal","foodType","this","console","log","$","post","response","_this2","onChange","event","target","setState","name","size","onClick","handleClickEvent","Types","Progress","Navbar","href","App","BrowserRouter","assets_Navbar","assets_Header","Route","exact","path","render","assets_Login","assets_Profile","assets_Food","assets_Types","assets_Progress","assets_Graph","assets_Body","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.904516a1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className = \"jumbotron text-center\">\r\n                <div>\r\n                    <h1>WellnessTracker</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","// Step 1 - Including react\r\nimport React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\n// Step 2 - Including the react-fusioncharts component\r\nimport ReactFC from 'react-fusioncharts';\r\n\r\n// Step 3 - Including the fusioncharts library\r\nimport FusionCharts from 'fusioncharts';\r\n\r\n// Step 4 - Including the chart type\r\nimport Column2D from 'fusioncharts/fusioncharts.charts';\r\n\r\n// Step 5 - Including the theme as fusion\r\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\r\n\r\n// Step 6 - Adding the chart as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\n\r\n// Step 7 - Creating the JSON object to store the chart configurations\r\nconst chartConfigs = {\r\n    type: 'column2d',// The chart type\r\n    width: '700', // Width of the chart\r\n    height: '400', // Height of the chart\r\n    dataFormat: 'json', // Data type\r\n    dataSource: {\r\n        // Chart Configuration\r\n        \"chart\": {\r\n            \"caption\": \"Weight over Time\",\r\n            \"subCaption\": \"in lbs\",\r\n            \"xAxisName\": \"Time\",\r\n            \"yAxisName\": \"Weight (in lbs)\",\r\n            \"yAxisMinValue\": \"150\",\r\n            \"numberSuffix\": \"lbs\",\r\n            \"theme\": \"fusion\",\r\n        },\r\n        // Chart Data\r\n        \"data\": [{\r\n            \"label\": \"Jan 01, 2019\",\r\n            \"value\": \"175\"\r\n        }, {\r\n            \"label\": \"Jan 05, 2019\",\r\n            \"value\": \"170\"\r\n        }, {\r\n            \"label\": \"Jan 10, 2019\",\r\n            \"value\": \"165\"\r\n        }, {\r\n            \"label\": \"Jan 15, 2019\",\r\n            \"value\": \"170\"\r\n        }, {\r\n            \"label\": \"Jan 20, 2019\",\r\n            \"value\": \"167\"\r\n        }, {\r\n            \"label\": \"Jan 25, 2019\",\r\n            \"value\": \"165\"\r\n        }, {\r\n            \"label\": \"Jan 30, 2019\",\r\n            \"value\": \"174\"\r\n        }, {\r\n            \"label\": \"Feb 05, 2019\",\r\n            \"value\": \"170\"\r\n        }]\r\n    }\r\n};\r\n\r\n// Step 8 - Creating the DOM element to pass the react-fusioncharts component\r\nclass Graph extends React.Component {\r\n  render() {\r\n     return (\r\n        <div className = \"text-center\">\r\n            <ReactFC\r\n                {...chartConfigs}/>\r\n        </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default Graph;","import React from \"react\";\r\n\r\nclass Body extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className = \"px-5\">\r\n                <h2>Title</h2>\r\n\r\n                <hr />\r\n                \r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi lorem tellus, tincidunt sed tempus eu, fermentum non libero. Quisque fringilla ex non luctus lobortis. Nam egestas velit sit amet nibh malesuada, vitae sollicitudin magna tincidunt. Integer varius lobortis sodales. Fusce blandit pellentesque aliquet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse faucibus urna ligula. Integer non lectus vel ipsum vulputate vulputate. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nullam sit amet nunc risus. Phasellus gravida, nisi sit amet vehicula elementum, nisi orci tempor urna, in vehicula risus dui ut tellus. Praesent sed est ut lorem fermentum faucibus sit amet ac velit. Suspendisse rutrum erat sed urna consectetur, congue placerat ante venenatis. Aliquam rhoncus tellus at ex gravida, mollis lacinia nisi tempor.</p>\r\n\r\n                <p>Aenean dapibus, ipsum at pharetra congue, dui turpis vehicula erat, at aliquet urna dolor quis felis. Nulla scelerisque aliquet ex, ut malesuada velit tristique eget. Sed diam nisl, scelerisque et fringilla sit amet, ultricies vel libero. Cras tincidunt urna et dignissim lobortis. Integer feugiat quam ligula, in tristique dui luctus ut. Donec sed quam a neque interdum malesuada. Aenean efficitur consequat dui at condimentum. Integer sodales ligula sed nibh vehicula, a finibus orci semper. Nunc tincidunt, libero id condimentum semper, nulla sapien egestas massa, quis viverra velit neque quis tellus. Curabitur ut tellus diam. Cras lobortis, metus vel egestas finibus, magna odio fringilla tortor, at placerat nisl purus vitae odio. Etiam non massa vel tellus porta congue.</p>\r\n\r\n                <p>Proin dignissim velit nulla, ut egestas massa rhoncus ut. Fusce sit amet tincidunt justo. Donec eu porttitor turpis, a pellentesque quam. Nunc sagittis enim at diam rhoncus consectetur. Mauris non maximus neque. Donec ornare, diam id vulputate condimentum, orci mi suscipit lorem, id tincidunt metus massa sit amet velit. Etiam imperdiet, ligula id aliquam tincidunt, turpis eros volutpat risus, ac interdum mauris est vitae enim. Nullam consequat turpis ut enim tristique gravida.</p>\r\n\r\n                <p>Nullam ornare interdum nulla ac accumsan. In hac habitasse platea dictumst. Etiam blandit a felis a suscipit. Proin convallis iaculis enim vel tempus. Sed ut rhoncus quam. Nulla consectetur quam varius, dictum erat et, dignissim dolor. Proin ac consectetur metus. Proin sapien eros, egestas eu lacinia ac, placerat nec nisi. Aliquam ut nisi eros. Nullam hendrerit risus eu tortor varius condimentum. Morbi finibus velit ac sapien pellentesque dapibus. Duis commodo nulla mauris, eget volutpat ex congue a.</p>\r\n\r\n                <p>Cras sed dolor sed tellus pellentesque efficitur. In nisi felis, posuere sed bibendum nec, luctus eu dolor. Ut sit amet dapibus augue, vitae pretium libero. Phasellus feugiat metus nec metus eleifend dignissim. Nam interdum lacus erat, a condimentum massa consectetur ut. Aenean aliquet rutrum molestie. Nunc nulla orci, consectetur ac magna sit amet, tincidunt ultricies quam.</p>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Body;","import React from \"react\";\n\nclass Login extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h2>Login</h2>\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label for=\"username\">Username:</label>\n                                        <input type=\"username\" class=\"form-control\" id=\"username\" aria-describedby=\"username\" placeholder=\"Enter Username\"/>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"password\">Password:</label>\n                                        <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter Password\"/>\n                                    </div>\n                                    <div className=\"g-signin2\" data-onsuccess=\"onSignIn\">\n                                    <button type=\"button\" className=\"btn btn-secondary\">Sign In</button>\n                                    </div>\n                                    <br/>\n                                    <button type=\"button\" className=\"btn btn-secondary\">Register</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Login;","import React from \"react\";\n\nclass Profile extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <h2>Hello (Username!)</h2>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4>Fill in the information below:</h4>\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label for=\"weight\">Weight:</label>\n                                        <input type=\"weight\" class=\"form-control\" id=\"weight\" aria-describedby=\"weight\" placeholder=\"Enter Weight\"/>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"height\">Height:</label>\n                                        <input type=\"height\" class=\"form-control\" id=\"height\" placeholder=\"Enter Height\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label for=\"age\">Age:</label>\n                                        <input type=\"age\" class=\"form-control\" id=\"age\" aria-describedby=\"age\" placeholder=\"Enter Age\"/>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"goalWeight\">Goal Weight:</label>\n                                        <input type=\"goalWeight\" class=\"form-control\" id=\"goalWeight\" placeholder=\"Enter Goal Weight\"/>\n                                    </div>\n                                    <button type=\"button\" className=\"btn btn-secondary\">Submit</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Profile;","import React from \"react\";\nimport $ from \"jquery\";\n\nclass Food extends React.Component {\n    state = {\n        foodName: \"\",\n        meal: \"Breakfast\",\n        foodType: \"Protein\"\n    }\n\n    handleClickEvent(){\n        const data = this.state;\n        console.log(data);\n        $.post(\"./db/food\", data, (response) => {\n            console.log(response);\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                    <h2>Daily Food Tracker</h2>\n                    <h3>Current Date</h3>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label>Food:</label>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"foodName\" \n                                            aria-describedby=\"food\" \n                                            placeholder=\"Enter Food\"\n                                            onChange = {(event) =>{\n                                                console.log(event.target.value);\n                                                this.setState({\n                                                    foodName: event.target.value\n                                                });\n                                            }}/>\n                                    </div>\n                                    <select \n                                        name=\"meal\" \n                                        className = \"mx-3\" \n                                        id = \"meal\" \n                                        size=\"4\"\n                                        onChange = {(event) => {\n                                            console.log(event.target.value);\n                                            this.setState({\n                                                meal: event.target.value\n                                            });\n                                        }}>\n                                        <option value=\"Breakfast\">Breakfast</option>\n                                        <option value=\"Lunch\">Lunch</option>\n                                        <option value=\"Snack\">Snack</option>\n                                        <option value=\"Dinner\">Dinner</option>\n                                    </select>\n                                    <select \n                                        name=\"foodType\" \n                                        className = \"mx-3\" \n                                        id = \"foodType\" \n                                        size=\"4\"\n                                        onChange = {(event) =>{\n                                            console.log(event.target.value);\n                                            this.setState({\n                                                foodType: event.target.value\n                                            });\n                                        }}>\n                                        <option value=\"Protein\">Protein</option>\n                                        <option value=\"Carb\">Carb</option>\n                                        <option value=\"Fruit\">Fruit</option>\n                                        <option value=\"Vegetable\">Vegetable</option>\n                                    </select>\n                                    <br/>\n                                    <br/>\n                                    <button \n                                        type=\"button\" \n                                        className=\"btn btn-secondary\" \n                                        onClick = {() => {\n                                            this.handleClickEvent();\n                                        }}>\n                                        Save\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                               DISPLAY DATABASE HERE\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Food;","import React from \"react\";\n\nclass Types extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <h1>Food Types</h1>\n                        <h3>Current Date</h3>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Types;","import React from \"react\";\n\nclass Progress extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <h1>Progress</h1>\n                        <h3>Current Date</h3>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Progress;","import React from \"react\";\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/profile\">Profile</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/food\">Food Tracker</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/types\">Food Types</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/progress\">Progress</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from \"./assets/Header\";\nimport Graph from \"./assets/Graph\";\nimport Body from \"./assets/Body\";\nimport Login from './assets/Login';\nimport Profile from './assets/Profile';\nimport Food from './assets/Food';\nimport Types from './assets/Types';\nimport Progress from './assets/Progress';\nimport Navbar from './assets/Navbar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Header />\n\n          <Route exact path = \"/login\" render = {() => {\n            return(\n              <Login />\n            )\n          }}/>\n\n          <Route exact path = \"/profile\" render = {() => {\n            return(\n              <Profile />\n            )\n          }}/>\n\n          <Route exact path = \"/food\" render = {() => {\n            return(\n              <Food />\n            )\n          }}/>\n\n          <Route exact path = \"/types\" render = {() => {\n            return(\n              <Types />\n            )\n          }}/>\n\n          <Route exact path = \"/progress\" render = {() => {\n            return(\n              <Progress />\n            )\n          }}/>\n\n          <Route exact path = \"/graph\" render = {() => {\n            return(\n              <div>\n                <Graph />\n                <Body />\n              </div>\n            )\n          }} />\n        </div>\n      </Router>\n    );\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}