{"version":3,"sources":["components/Header.js","components/Graph.js","components/Login.js","components/Profile.js","components/Food.js","components/Types.js","components/Progress.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","ReactFC","fcRoot","FusionCharts","Column2D","FusionTheme","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","yAxisMinValue","numberSuffix","theme","data","label","value","Graph","ReactFC_default","Login","id","aria-describedby","placeholder","data-onsuccess","Profile","for","class","Food","state","foodName","meal","foodType","e","preventDefault","this","console","log","axios","defaults","baseURL","process","post","then","response","catch","error","_this2","onSubmit","event","handleClickEvent","onChange","target","setState","name","size","Types","Progress","Navbar","href","App","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","userHasAuthenticated","authenticated","isAuthenticated","BrowserRouter","src_components_Navbar","src_components_Header","Route","exact","path","render","components_Login","components_Profile","components_Food","components_Types","components_Progress","components_Graph","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e8c10ff.chunk.js","sourcesContent":["import React from \"react\";\nimport './Header.css';\n\nclass Header extends React.Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"logo\"><i className=\"fas fa-pepper-hot\"></i> Wellness Tracker</h1>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","// Step 1 - Including react\nimport React from 'react';\n// import ReactDOM from 'react-dom';\n\n// Step 2 - Including the react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n// Step 3 - Including the fusioncharts library\nimport FusionCharts from 'fusioncharts';\n\n// Step 4 - Including the chart type\nimport Column2D from 'fusioncharts/fusioncharts.charts';\n\n// Step 5 - Including the theme as fusion\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n// Step 6 - Adding the chart as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\n// Step 7 - Creating the JSON object to store the chart configurations\nconst chartConfigs = {\n    type: 'column2d',// The chart type\n    width: '700', // Width of the chart\n    height: '400', // Height of the chart\n    dataFormat: 'json', // Data type\n    dataSource: {\n        // Chart Configuration\n        \"chart\": {\n            \"caption\": \"Weight over Time\",\n            \"subCaption\": \"in lbs\",\n            \"xAxisName\": \"Time\",\n            \"yAxisName\": \"Weight (in lbs)\",\n            \"yAxisMinValue\": \"150\",\n            \"numberSuffix\": \"lbs\",\n            \"theme\": \"fusion\",\n        },\n        // Chart Data\n        \"data\": [{\n            \"label\": \"Jan 01, 2019\",\n            \"value\": \"175\"\n        }, {\n            \"label\": \"Jan 05, 2019\",\n            \"value\": \"170\"\n        }, {\n            \"label\": \"Jan 10, 2019\",\n            \"value\": \"165\"\n        }, {\n            \"label\": \"Jan 15, 2019\",\n            \"value\": \"170\"\n        }, {\n            \"label\": \"Jan 20, 2019\",\n            \"value\": \"167\"\n        }, {\n            \"label\": \"Jan 25, 2019\",\n            \"value\": \"165\"\n        }, {\n            \"label\": \"Jan 30, 2019\",\n            \"value\": \"174\"\n        }, {\n            \"label\": \"Feb 05, 2019\",\n            \"value\": \"170\"\n        }]\n    }\n};\n\n// Step 8 - Creating the DOM element to pass the react-fusioncharts component\nclass Graph extends React.Component {\n  render() {\n     return (\n        <div className = \"text-center\">\n            <ReactFC\n                {...chartConfigs}/>\n        </div>\n     );\n  }\n}\n\nexport default Graph;","import React from \"react\";\n// import \"./Login.css\";\n\nclass Login extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h2>Login</h2>\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label>Username:</label>\n                                        <input type=\"username\" className=\"form-control\" id=\"username\" aria-describedby=\"username\" placeholder=\"Enter Username\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label>Password:</label>\n                                        <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\"/>\n                                    </div>\n                                    <div className=\"g-signin2\" data-onsuccess=\"onSignIn\">\n                                    <button type=\"button\" className=\"btn btn-secondary\">Sign In</button>\n                                    </div>\n                                    <br/>\n                                    <button type=\"button\" className=\"btn btn-secondary\">Register</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Login;","import React from \"react\";\n\nclass Profile extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <h2>Hello (Username!)</h2>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4>Fill in the information below:</h4>\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label for=\"weight\">Weight:</label>\n                                        <input type=\"weight\" class=\"form-control\" id=\"weight\" aria-describedby=\"weight\" placeholder=\"Enter Weight\"/>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"height\">Height:</label>\n                                        <input type=\"height\" class=\"form-control\" id=\"height\" placeholder=\"Enter Height\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label for=\"age\">Age:</label>\n                                        <input type=\"age\" class=\"form-control\" id=\"age\" aria-describedby=\"age\" placeholder=\"Enter Age\"/>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"goalWeight\">Goal Weight:</label>\n                                        <input type=\"goalWeight\" class=\"form-control\" id=\"goalWeight\" placeholder=\"Enter Goal Weight\"/>\n                                    </div>\n                                    <button type=\"button\" className=\"btn btn-secondary\">Submit</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Profile;","import React from \"react\";\nimport axios from \"axios\";\n// import helper from \"../../../routes/dataHelper\"\n// import $ from \"jquery\";\n\nclass Food extends React.Component {\n    state = {\n        foodName: \"\",\n        meal: \"Breakfast\",\n        foodType: \"Protein\"\n    }\n\n    handleClickEvent(e){\n        e.preventDefault();\n        const data = this.state;\n        console.log(data);\n\n        // $.post(\"http://localhost:3001/db/food\", data, (response) => {\n        //     console.log(response);\n        // })\n\n        // fetch('http://localhost:3001/db/food', {\n        //     method: 'POST',\n        //     body: data\n        // }).catch(err => {throw err})\n        // const helper = () => axios.get()\n        axios.defaults.baseURL =  process.env.NODE_ENV|| 'http://localhost:3001';\n\n        axios.post(\"/db/food\", data)\n            .then((response)=>{\n                console.log(response)\n            }).catch((error) => {throw error;})\n    }\n    \n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                    <h2>Daily Food Tracker</h2>\n                    <h3>Current Date</h3>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <form onSubmit = {(event) => this.handleClickEvent(event)}>\n                                    <div className=\"form-group\">\n                                        <label>Food:</label>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"foodName\" \n                                            aria-describedby=\"food\" \n                                            placeholder=\"Enter Food\"\n                                            onChange = {(event) =>{\n                                                console.log(event.target.value);\n                                                this.setState({\n                                                    foodName: event.target.value\n                                                });\n                                            }}/>\n                                    </div>\n                                    <select \n                                        name=\"meal\" \n                                        className = \"mx-3\" \n                                        id = \"meal\" \n                                        size=\"4\"\n                                        onChange = {(event) => {\n                                            console.log(event.target.value);\n                                            this.setState({\n                                                meal: event.target.value\n                                            });\n                                        }}>\n                                        <option value=\"Breakfast\">Breakfast</option>\n                                        <option value=\"Lunch\">Lunch</option>\n                                        <option value=\"Snack\">Snack</option>\n                                        <option value=\"Dinner\">Dinner</option>\n                                    </select>\n                                    <select \n                                        name=\"foodType\" \n                                        className = \"mx-3\" \n                                        id = \"foodType\" \n                                        size=\"4\"\n                                        onChange = {(event) =>{\n                                            console.log(event.target.value);\n                                            this.setState({\n                                                foodType: event.target.value\n                                            });\n                                        }}>\n                                        <option value=\"Protein\">Protein</option>\n                                        <option value=\"Carb\">Carb</option>\n                                        <option value=\"Fruit\">Fruit</option>\n                                        <option value=\"Vegetable\">Vegetable</option>\n                                    </select>\n                                    <br/>\n                                    <br/>\n                                    <button \n                                        type=\"submit\" \n                                        className=\"btn btn-secondary\" \n                                        // onClick = {() => {\n                                        //     this.handleClickEvent();\n                                        // }}>\n                                        >\n                                        Save\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                               DISPLAY DATABASE HERE\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Food;","import React from \"react\";\n\nclass Types extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <h1>Food Types</h1>\n                        <h3>Current Date</h3>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Types;","import React from \"react\";\n\nclass Progress extends React.Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\"></div>\n                    <div className=\"col-md-6\">\n                        <h1>Progress</h1>\n                        <h3>Current Date</h3>\n                    </div>\n                    <div className=\"col-md-3\"></div>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Progress;","import React from \"react\";\nimport './Navbar.css';\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item nav-item-1\">\n                            <a className=\"nav-link\" href=\"/profile\">Profile</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/food\">Food Tracker</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/types\">Food Types</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/progress\">Progress</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Graph from \"./components/Graph\";\nimport Login from './components/Login';\nimport Profile from './components/Profile';\nimport Food from './components/Food';\nimport Types from './components/Types';\nimport Progress from './components/Progress';\nimport Navbar from './components/Navbar';\n// import './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAuthenticated: false\n    }\n  }\n\n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n  render() {\n    // const childProps = {\n    //   isAuthenticated: this.state.isAuthenticated,\n    //   userHasAuthenticated: this.userHasAuthenticated\n    // };\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Header />\n\n          <Route exact path = \"/login\" render = {() => {\n            return(\n              <Login />\n            )\n          }}/>\n\n          <Route exact path = \"/profile\" render = {() => {\n            return(\n              <Profile />\n            )\n          }}/>\n\n          <Route exact path = \"/food\" render = {() => {\n            return(\n              <Food />\n            )\n          }}/>\n\n          <Route exact path = \"/types\" render = {() => {\n            return(\n              <Types />\n            )\n          }}/>\n\n          <Route exact path = \"/progress\" render = {() => {\n            return(\n              <Progress />\n            )\n          }}/>\n\n          <Route exact path = \"/graph\" render = {() => {\n            return(\n              <div>\n                <Graph />\n              </div>\n            )\n          }} />\n        </div>\n        \n      </Router>\n    );\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}